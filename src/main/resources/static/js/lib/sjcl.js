



<!DOCTYPE html>
<html lang="en" class=" is-u2f-enabled">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-298818692f75de57d67115ca5a0c1f983d1d5ad302774216c297495f46f0a3da.css" integrity="sha256-KYgYaS913lfWcRXKWgwfmD0dWtMCd0IWwpdJX0bwo9o=" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-5cdfa79e1c4beb2f5bf44e460eab049867751ad7d5bc0c37f2faab8233768bf0.css" integrity="sha256-XN+nnhxL6y9b9E5GDqsEmGd1GtfVvAw38vqrgjN2i/A=" media="all" rel="stylesheet" />
    
    
    
    

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=device-width">
    
    <title>sjcl/sjcl.js at master Â· bitwiseshiftleft/sjcl</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="https://avatars0.githubusercontent.com/u/288092?v=3&amp;s=400" name="twitter:image:src" /><meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="bitwiseshiftleft/sjcl" name="twitter:title" /><meta content="sjcl - Stanford Javascript Crypto Library" name="twitter:description" />
      <meta content="https://avatars0.githubusercontent.com/u/288092?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="bitwiseshiftleft/sjcl" property="og:title" /><meta content="https://github.com/bitwiseshiftleft/sjcl" property="og:url" /><meta content="sjcl - Stanford Javascript Crypto Library" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6MTI2NjYxMDA5OjBiMmUwMDNkYWJkMjU2MTZmNzVlYWMzMzBkNDljODVmOGFlOTZlNmFhYmQ4ZmMxY2JlZDllNDRmY2MxOWRlMGQ=--387de9a876e5c80f16bb7feba06f9628ca13d970">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">
    <meta name="request-id" content="F47E:7577:2F908C4:4BB0FFC:588FE92C" data-pjax-transient>

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="F47E:7577:2F908C4:4BB0FFC:588FE92C" name="octolytics-dimension-request_id" /><meta content="8837424" name="octolytics-actor-id" /><meta content="ssiegel2" name="octolytics-actor-login" /><meta content="7ab3664d36c7c83c29d69cba7645ad086c9ff7a01878d67c21743d42391f7a1f" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged In">



        <meta name="hostname" content="github.com">
    <meta name="user-login" content="ssiegel2">

        <meta name="expected-hostname" content="github.com">
      <meta name="js-proxy-site-detection-payload" content="MzZjZDhkMzk4OTFmNWU0MWZlYmM4ZjBlOWE1Mjg4MWRiOTE0NzYzYzhmMzg1ODY4MTc0ZjExMjcxOTRkYTNiNnx7InJlbW90ZV9hZGRyZXNzIjoiMTMwLjg1LjI0MS4yMSIsInJlcXVlc3RfaWQiOiJGNDdFOjc1Nzc6MkY5MDhDNDo0QkIwRkZDOjU4OEZFOTJDIiwidGltZXN0YW1wIjoxNDg1ODI2MzUxLCJob3N0IjoiZ2l0aHViLmNvbSJ9">


      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta name="html-safe-nonce" content="8d19e5155712151ca9fb0eecaf4f5b5e8cac1ed5">

    <meta http-equiv="x-pjax-version" content="171691120cc202d9d7a038c068dc9712">
    

      
  <meta name="description" content="sjcl - Stanford Javascript Crypto Library">
  <meta name="go-import" content="github.com/bitwiseshiftleft/sjcl git https://github.com/bitwiseshiftleft/sjcl.git">

  <meta content="288092" name="octolytics-dimension-user_id" /><meta content="bitwiseshiftleft" name="octolytics-dimension-user_login" /><meta content="688208" name="octolytics-dimension-repository_id" /><meta content="bitwiseshiftleft/sjcl" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="688208" name="octolytics-dimension-repository_network_root_id" /><meta content="bitwiseshiftleft/sjcl" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/bitwiseshiftleft/sjcl/commits/master.atom" rel="alternate" title="Recent Commits to sjcl:master" type="application/atom+xml">


      <link rel="canonical" href="https://github.com/bitwiseshiftleft/sjcl/blob/master/sjcl.js" data-pjax-transient>
  </head>


  <body class="logged-in  env-production windows vis-public page-blob">
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="28" version="1.1" viewBox="0 0 16 16" width="28"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/bitwiseshiftleft/sjcl/search" class="js-site-search-form" data-scoped-search-url="/bitwiseshiftleft/sjcl/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    
    <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s js-socket-channel js-notification-indicator" data-channel="tenant:1:notification-changed:8837424" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
        <span class="mail-status unread"></span>
        <svg aria-hidden="true" class="octicon octicon-bell" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create newâ¦"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="bitwiseshiftleft/sjcl">This repository</span>
  </div>
    <a class="dropdown-item" href="/bitwiseshiftleft/sjcl/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/ssiegel2"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@ssiegel2" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/8837424?v=3&amp;s=40" width="20" />
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">ssiegel2</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/ssiegel2" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/ssiegel2?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
          <a class="dropdown-item" href="/integrations" data-ga-click="Header, go to integrations, text:integrations">
            Integrations
          </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="eDTl+pyLbf9qpmJKpzzhhUTN5p5hq49a5UPfrze8mzdYGv/qoip0D1szDXRpLoeAEShzyFPF8z8py2JTLf1wFQ==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    
  </div>
</div>


      


    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      
<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="TbpqXs5dur/E1TGWv8NuvD7PL3WY7rKxuZV8JroXQjuHitXYCDCa7QQAX1et5N+6hXuCoplOc0l5S8gPdHzN7Q==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="688208" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/bitwiseshiftleft/sjcl/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
              <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
              Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/bitwiseshiftleft/sjcl/watchers"
            aria-label="208 users are watching this repository">
            208
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                      Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/bitwiseshiftleft/sjcl/unstar" class="starred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="z7keQmIOlMS0m0Y56WCatqv2L1S9SbG+bzOb+luJo+ppZ4L0ZyFu7IoSxN4oi9z6Z9iaAAjP/588Z1u19SiiXg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar bitwiseshiftleft/sjcl"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/bitwiseshiftleft/sjcl/stargazers"
           aria-label="3736 users starred this repository">
          3,736
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/bitwiseshiftleft/sjcl/star" class="unstarred" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="8ZyVWMZbV1lRvw+D8RePRrDaeWCrLaKmMqBaXR5VBQ+PDTnvyecIUHyTz4fXoYbIk3DRq/KD3p0OxWCFNpp/jw==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star bitwiseshiftleft/sjcl"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/bitwiseshiftleft/sjcl/stargazers"
           aria-label="3736 users starred this repository">
          3,736
        </a>
</form>  </div>

  </li>

  <li>
          <a href="#fork-destination-box" class="btn btn-sm btn-with-count"
              title="Fork your own copy of bitwiseshiftleft/sjcl to your account"
              aria-label="Fork your own copy of bitwiseshiftleft/sjcl to your account"
              rel="facebox"
              data-ga-click="Repository, show fork modal, action:blob#show; text:Fork">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
            Fork
          </a>

          <div id="fork-destination-box" style="display: none;">
            <h2 class="facebox-header" data-facebox-id="facebox-header">Where should we fork this repository?</h2>
            <include-fragment src=""
                class="js-fork-select-fragment fork-select-fragment"
                data-url="/bitwiseshiftleft/sjcl/fork?fragment=1">
              <img alt="Loading" height="64" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-128.gif" width="64" />
            </include-fragment>
          </div>

    <a href="/bitwiseshiftleft/sjcl/network" class="social-count"
       aria-label="520 users forked this repository">
      520
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/bitwiseshiftleft" class="url fn" rel="author">bitwiseshiftleft</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/bitwiseshiftleft/sjcl" data-pjax="#js-repo-pjax-container">sjcl</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/bitwiseshiftleft/sjcl" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /bitwiseshiftleft/sjcl" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/bitwiseshiftleft/sjcl/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /bitwiseshiftleft/sjcl/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">47</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/bitwiseshiftleft/sjcl/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /bitwiseshiftleft/sjcl/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">11</span>
      <meta itemprop="position" content="3">
</a>  </span>

  <a href="/bitwiseshiftleft/sjcl/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /bitwiseshiftleft/sjcl/projects">
    <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
    Projects
    <span class="counter">0</span>
</a>
    <a href="/bitwiseshiftleft/sjcl/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /bitwiseshiftleft/sjcl/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a href="/bitwiseshiftleft/sjcl/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /bitwiseshiftleft/sjcl/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
    Pulse
</a>
  <a href="/bitwiseshiftleft/sjcl/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /bitwiseshiftleft/sjcl/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Graphs
</a>

</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/bitwiseshiftleft/sjcl/blob/3668e639bc78e910815f501d55458e968845edc2/sjcl.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:41b6e9cd8bfe39ba625410097937c217 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/feature/pool_state/sjcl.js"
               data-name="feature/pool_state"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                feature/pool_state
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/feature/progress/sjcl.js"
               data-name="feature/progress"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                feature/progress
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/feature/ripemd160/sjcl.js"
               data-name="feature/ripemd160"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                feature/ripemd160
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/feature/security_mail/sjcl.js"
               data-name="feature/security_mail"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                feature/security_mail
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/feature/serialization/sjcl.js"
               data-name="feature/serialization"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                feature/serialization
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/gh-pages/sjcl.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/bitwiseshiftleft/sjcl/blob/master/sjcl.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/bitwiseshiftleft/sjcl/blob/version-0.8/sjcl.js"
               data-name="version-0.8"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                version-0.8
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.6/sjcl.js"
              data-name="1.0.6"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.6">
                1.0.6
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.5/sjcl.js"
              data-name="1.0.5"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.5">
                1.0.5
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.4/sjcl.js"
              data-name="1.0.4"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.4">
                1.0.4
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.3/sjcl.js"
              data-name="1.0.3"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.3">
                1.0.3
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.2/sjcl.js"
              data-name="1.0.2"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.2">
                1.0.2
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.1/sjcl.js"
              data-name="1.0.1"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.1">
                1.0.1
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
              href="/bitwiseshiftleft/sjcl/tree/1.0.0/sjcl.js"
              data-name="1.0.0"
              data-skip-pjax="true"
              rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target" title="1.0.0">
                1.0.0
              </span>
            </a>
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="/bitwiseshiftleft/sjcl/find/master"
          class="js-pjax-capture-input btn btn-sm BtnGroup-item"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/bitwiseshiftleft/sjcl"><span>sjcl</span></a></span></span><span class="separator">/</span><strong class="final-path">sjcl.js</strong>
  </div>
</div>


  <div class="commit-tease">
      <span class="float-right">
        <a class="commit-tease-sha" href="/bitwiseshiftleft/sjcl/commit/63eed58b9dc395afb3c03df8d70d7e7bf4c88b1b" data-pjax>
          63eed58
        </a>
        <relative-time datetime="2016-09-10T10:34:50Z">Sep 10, 2016</relative-time>
      </span>
      <div>
        <img alt="@Nilos" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/1300836?v=3&amp;s=40" width="20" />
        <a href="/Nilos" class="user-mention" rel="contributor">Nilos</a>
          <a href="/bitwiseshiftleft/sjcl/commit/63eed58b9dc395afb3c03df8d70d7e7bf4c88b1b" class="message" data-pjax="true" title="fix exports missing in SOURCES list">fix exports missing in SOURCES list</a>
      </div>

    <div class="commit-tease-contributors">
      <button type="button" class="btn-link muted-link contributors-toggle" data-facebox="#blob_contributors_box">
        <strong>10</strong>
         contributors
      </button>
          <a class="avatar-link tooltipped tooltipped-s" aria-label="bitwiseshiftleft" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=bitwiseshiftleft"><img alt="@bitwiseshiftleft" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/288092?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Nilos" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=Nilos"><img alt="@Nilos" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/1300836?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="sqs" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=sqs"><img alt="@sqs" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/1976?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="robyoder" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=robyoder"><img alt="@robyoder" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/622513?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="fluidblue" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=fluidblue"><img alt="@fluidblue" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/3339416?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="Bren2010" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=Bren2010"><img alt="@Bren2010" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/416022?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="wizzard0" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=wizzard0"><img alt="@wizzard0" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/424619?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="sembrestels" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=sembrestels"><img alt="@sembrestels" class="avatar" height="20" src="https://avatars2.githubusercontent.com/u/931684?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="tanx" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=tanx"><img alt="@tanx" class="avatar" height="20" src="https://avatars3.githubusercontent.com/u/1374174?v=3&amp;s=40" width="20" /> </a>
    <a class="avatar-link tooltipped tooltipped-s" aria-label="azer" href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js?author=azer"><img alt="@azer" class="avatar" height="20" src="https://avatars0.githubusercontent.com/u/13072?v=3&amp;s=40" width="20" /> </a>


    </div>

    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header" data-facebox-id="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list" data-facebox-id="facebox-description">
          <li class="facebox-user-list-item">
            <img alt="@bitwiseshiftleft" height="24" src="https://avatars0.githubusercontent.com/u/288092?v=3&amp;s=48" width="24" />
            <a href="/bitwiseshiftleft">bitwiseshiftleft</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Nilos" height="24" src="https://avatars1.githubusercontent.com/u/1300836?v=3&amp;s=48" width="24" />
            <a href="/Nilos">Nilos</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@sqs" height="24" src="https://avatars1.githubusercontent.com/u/1976?v=3&amp;s=48" width="24" />
            <a href="/sqs">sqs</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@robyoder" height="24" src="https://avatars1.githubusercontent.com/u/622513?v=3&amp;s=48" width="24" />
            <a href="/robyoder">robyoder</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@fluidblue" height="24" src="https://avatars1.githubusercontent.com/u/3339416?v=3&amp;s=48" width="24" />
            <a href="/fluidblue">fluidblue</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@Bren2010" height="24" src="https://avatars2.githubusercontent.com/u/416022?v=3&amp;s=48" width="24" />
            <a href="/Bren2010">Bren2010</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@wizzard0" height="24" src="https://avatars0.githubusercontent.com/u/424619?v=3&amp;s=48" width="24" />
            <a href="/wizzard0">wizzard0</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@sembrestels" height="24" src="https://avatars0.githubusercontent.com/u/931684?v=3&amp;s=48" width="24" />
            <a href="/sembrestels">sembrestels</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@tanx" height="24" src="https://avatars1.githubusercontent.com/u/1374174?v=3&amp;s=48" width="24" />
            <a href="/tanx">tanx</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="@azer" height="24" src="https://avatars2.githubusercontent.com/u/13072?v=3&amp;s=48" width="24" />
            <a href="/azer">azer</a>
          </li>
      </ul>
    </div>
  </div>


<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/bitwiseshiftleft/sjcl/raw/master/sjcl.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/bitwiseshiftleft/sjcl/blame/master/sjcl.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b">Blame</a>
      <a href="/bitwiseshiftleft/sjcl/commits/master/sjcl.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="github-windows://openRepo/https://github.com/bitwiseshiftleft/sjcl?branch=master&amp;filepath=sjcl.js"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/bitwiseshiftleft/sjcl/edit/master/sjcl.js" class="inline-form js-update-url-with-hash" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="oPDA4GqFW5Rn6nyjDTgrIKh8yc4IThDDqXQwWsypljH90/hat6q4bZLlJBXkz+dOSGdNomVHyxUjXCM7XDrKHQ==" /></div>
          <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
          </button>
</form>        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/bitwiseshiftleft/sjcl/delete/master/sjcl.js" class="inline-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="fuOx5ENWVeXhGZUGblx09920Z9eqKu4ikNaQ54uj/snX9YfT7p0WbQ31pbTXgi31cxDm1ZhJ4M/v0p/XVlnBIQ==" /></div>
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      61 lines (60 sloc)
      <span class="file-info-divider"></span>
    24.8 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>use strict<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> sjcl<span class="pl-k">=</span>{cipher<span class="pl-k">:</span>{},hash<span class="pl-k">:</span>{},keyexchange<span class="pl-k">:</span>{},mode<span class="pl-k">:</span>{},misc<span class="pl-k">:</span>{},codec<span class="pl-k">:</span>{},exception<span class="pl-k">:</span>{<span class="pl-en">corrupt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>CORRUPT: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">message</span>};<span class="pl-c1">this</span>.<span class="pl-smi">message</span><span class="pl-k">=</span>a},<span class="pl-en">invalid</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>INVALID: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">message</span>};<span class="pl-c1">this</span>.<span class="pl-smi">message</span><span class="pl-k">=</span>a},<span class="pl-en">bug</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>BUG: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">message</span>};<span class="pl-c1">this</span>.<span class="pl-smi">message</span><span class="pl-k">=</span>a},<span class="pl-en">notReady</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">toString</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>NOT READY: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">message</span>};<span class="pl-c1">this</span>.<span class="pl-smi">message</span><span class="pl-k">=</span>a}}};</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">cipher</span>.<span class="pl-en">aes</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">s</span>[<span class="pl-c1">0</span>][<span class="pl-c1">0</span>][<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">O</span>();<span class="pl-k">var</span> b,c,d,e,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">s</span>[<span class="pl-c1">0</span>][<span class="pl-c1">4</span>],g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">s</span>[<span class="pl-c1">1</span>];b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-c1">4</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">6</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">8</span><span class="pl-k">!==</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid aes key size<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>[d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),e<span class="pl-k">=</span>[]];<span class="pl-k">for</span>(a<span class="pl-k">=</span>b;a<span class="pl-k">&lt;</span><span class="pl-c1">4</span><span class="pl-k">*</span>b<span class="pl-k">+</span><span class="pl-c1">28</span>;a<span class="pl-k">++</span>){c<span class="pl-k">=</span>d[a<span class="pl-k">-</span><span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">%</span>b<span class="pl-k">||</span><span class="pl-c1">8</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">===</span>a<span class="pl-k">%</span>b)c<span class="pl-k">=</span>f[c<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">^</span>f[c<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span><span class="pl-k">^</span>f[c<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>f[c<span class="pl-k">&amp;</span><span class="pl-c1">255</span>],<span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">%</span>b<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>c<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>c<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">^</span>h<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>,h<span class="pl-k">=</span>h<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span><span class="pl-c1">283</span><span class="pl-k">*</span>(h<span class="pl-k">&gt;&gt;</span><span class="pl-c1">7</span>));d[a]<span class="pl-k">=</span>d[a<span class="pl-k">-</span>b]<span class="pl-k">^</span>c}<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;a;b<span class="pl-k">++</span>,a<span class="pl-k">--</span>)c<span class="pl-k">=</span>d[b<span class="pl-k">&amp;</span><span class="pl-c1">3</span><span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">-</span><span class="pl-c1">4</span>],e[b]<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-k">&gt;=</span>a<span class="pl-k">||</span><span class="pl-c1">4</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>c<span class="pl-k">:</span>g[<span class="pl-c1">0</span>][f[c<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]]<span class="pl-k">^</span>g[<span class="pl-c1">1</span>][f[c<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]]<span class="pl-k">^</span>g[<span class="pl-c1">2</span>][f[c<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]]<span class="pl-k">^</span>g[<span class="pl-c1">3</span>][f[c<span class="pl-k">&amp;</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">255</span>]]};</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">cipher</span>.<span class="pl-smi">aes</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">encrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">t</span>(<span class="pl-c1">this</span>,a,<span class="pl-c1">0</span>)},<span class="pl-en">decrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">t</span>(<span class="pl-c1">this</span>,a,<span class="pl-c1">1</span>)},s<span class="pl-k">:</span>[[[],[],[],[],[]],[[],[],[],[],[]]],<span class="pl-en">O</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">s</span>[<span class="pl-c1">0</span>],b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">s</span>[<span class="pl-c1">1</span>],c<span class="pl-k">=</span>a[<span class="pl-c1">4</span>],d<span class="pl-k">=</span>b[<span class="pl-c1">4</span>],e,f,g,h<span class="pl-k">=</span>[],k<span class="pl-k">=</span>[],l,n,m,p;<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0x100</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)k[(h[e]<span class="pl-k">=</span>e<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span><span class="pl-c1">283</span><span class="pl-k">*</span>(e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">7</span>))<span class="pl-k">^</span>e]<span class="pl-k">=</span>e;<span class="pl-k">for</span>(f<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">!</span>c[f];f<span class="pl-k">^=</span>l<span class="pl-k">||</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span>k[g]<span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">for</span>(m<span class="pl-k">=</span>g<span class="pl-k">^</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">2</span><span class="pl-k">^</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">3</span><span class="pl-k">^</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">4</span>,m<span class="pl-k">=</span>m<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>m<span class="pl-k">&amp;</span><span class="pl-c1">255</span><span class="pl-k">^</span><span class="pl-c1">99</span>,c[f]<span class="pl-k">=</span>m,d[m]<span class="pl-k">=</span>f,n<span class="pl-k">=</span>h[e<span class="pl-k">=</span>h[l<span class="pl-k">=</span>h[f]]],p<span class="pl-k">=</span><span class="pl-c1">0x1010101</span><span class="pl-k">*</span>n<span class="pl-k">^</span><span class="pl-c1">0x10001</span><span class="pl-k">*</span>e<span class="pl-k">^</span><span class="pl-c1">0x101</span><span class="pl-k">*</span>l<span class="pl-k">^</span><span class="pl-c1">0x1010100</span><span class="pl-k">*</span>f,n<span class="pl-k">=</span><span class="pl-c1">0x101</span><span class="pl-k">*</span>h[m]<span class="pl-k">^</span><span class="pl-c1">0x1010100</span><span class="pl-k">*</span>m,e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)a[e][f]<span class="pl-k">=</span>n<span class="pl-k">=</span>n<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">^</span>n<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span>,b[e][m]<span class="pl-k">=</span>p<span class="pl-k">=</span>p<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">^</span>p<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-c1">5</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)a[e]<span class="pl-k">=</span>a[e].<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),b[e]<span class="pl-k">=</span>b[e].<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>)}};</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">t</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">4</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid aes block size<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>[c],e<span class="pl-k">=</span>b[<span class="pl-c1">0</span>]<span class="pl-k">^</span>d[<span class="pl-c1">0</span>],f<span class="pl-k">=</span>b[c<span class="pl-k">?</span><span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-c1">1</span>]<span class="pl-k">^</span>d[<span class="pl-c1">1</span>],g<span class="pl-k">=</span>b[<span class="pl-c1">2</span>]<span class="pl-k">^</span>d[<span class="pl-c1">2</span>];b<span class="pl-k">=</span>b[c<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">3</span>]<span class="pl-k">^</span>d[<span class="pl-c1">3</span>];<span class="pl-k">var</span> h,k,l,n<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">/</span><span class="pl-c1">4</span><span class="pl-k">-</span><span class="pl-c1">2</span>,m,p<span class="pl-k">=</span><span class="pl-c1">4</span>,r<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">s</span>[c];a<span class="pl-k">=</span>h[<span class="pl-c1">0</span>];<span class="pl-k">var</span> q<span class="pl-k">=</span>h[<span class="pl-c1">1</span>],v<span class="pl-k">=</span>h[<span class="pl-c1">2</span>],w<span class="pl-k">=</span>h[<span class="pl-c1">3</span>],x<span class="pl-k">=</span>h[<span class="pl-c1">4</span>];<span class="pl-k">for</span>(m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>n;m<span class="pl-k">++</span>)h<span class="pl-k">=</span>a[e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]<span class="pl-k">^</span>q[f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>v[g<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>w[b<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>d[p],k<span class="pl-k">=</span>a[f<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]<span class="pl-k">^</span>q[g<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>v[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>w[e<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>d[p<span class="pl-k">+</span><span class="pl-c1">1</span>],l<span class="pl-k">=</span>a[g<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]<span class="pl-k">^</span>q[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>v[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>w[f<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>d[p<span class="pl-k">+</span><span class="pl-c1">2</span>],b<span class="pl-k">=</span>a[b<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]<span class="pl-k">^</span>q[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>v[f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>w[g<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>d[p<span class="pl-k">+</span><span class="pl-c1">3</span>],p<span class="pl-k">+=</span><span class="pl-c1">4</span>,e<span class="pl-k">=</span>h,f<span class="pl-k">=</span>k,g<span class="pl-k">=</span>l;<span class="pl-k">for</span>(m<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>m;m<span class="pl-k">++</span>)r[c<span class="pl-k">?</span><span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-k">-</span>m<span class="pl-k">:</span>m]<span class="pl-k">=</span>x[e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">^</span>x[f<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span><span class="pl-k">^</span>x[g<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">^</span>x[b<span class="pl-k">&amp;</span><span class="pl-c1">255</span>]<span class="pl-k">^</span>d[p<span class="pl-k">++</span>],h<span class="pl-k">=</span>e,e<span class="pl-k">=</span>f,f<span class="pl-k">=</span>g,g<span class="pl-k">=</span>b,b<span class="pl-k">=</span>h;<span class="pl-k">return</span> r}</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span><span class="pl-k">=</span>{<span class="pl-en">bitSlice</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">$</span>(<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(b<span class="pl-k">/</span><span class="pl-c1">32</span>),<span class="pl-c1">32</span><span class="pl-k">-</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)).<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">clamp</span>(a,c<span class="pl-k">-</span>b)},<span class="pl-en">extract</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-k">-</span>b<span class="pl-k">-</span>c<span class="pl-k">&amp;</span><span class="pl-c1">31</span>);<span class="pl-k">return</span>((b<span class="pl-k">+</span>c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">^</span>b)<span class="pl-k">&amp;</span><span class="pl-k">-</span><span class="pl-c1">32</span><span class="pl-k">?</span>a[b<span class="pl-k">/</span><span class="pl-c1">32</span><span class="pl-k">|</span><span class="pl-c1">0</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">32</span><span class="pl-k">-</span>d<span class="pl-k">^</span>a[b<span class="pl-k">/</span><span class="pl-c1">32</span><span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">|</span><span class="pl-c1">0</span>]<span class="pl-k">&gt;&gt;&gt;</span>d<span class="pl-k">:</span>a[b<span class="pl-k">/</span><span class="pl-c1">32</span><span class="pl-k">|</span><span class="pl-c1">0</span>]<span class="pl-k">&gt;&gt;&gt;</span>d)<span class="pl-k">&amp;</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>c)<span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-en">concat</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(b);<span class="pl-k">var</span> c<span class="pl-k">=</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">getPartial</span>(c);<span class="pl-k">return</span> <span class="pl-c1">32</span><span class="pl-k">===</span>d<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(b)<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">$</span>(b,d,c<span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>))},<span class="pl-en">bitLength</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">32</span><span class="pl-k">*</span>(b<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">getPartial</span>(a[b<span class="pl-k">-</span><span class="pl-c1">1</span>])},<span class="pl-en">clamp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">32</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>b)<span class="pl-k">return</span> a;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(b<span class="pl-k">/</span><span class="pl-c1">32</span>));<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span>b<span class="pl-k">&amp;</span><span class="pl-c1">31</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&amp;&amp;</span>(a[c<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">partial</span>(b,a[c<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;</span><span class="pl-c1">2147483648</span><span class="pl-k">&gt;&gt;</span>b<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>));<span class="pl-k">return</span> a},<span class="pl-en">partial</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">32</span><span class="pl-k">===</span>a<span class="pl-k">?</span>b<span class="pl-k">:</span>(c<span class="pl-k">?</span>b<span class="pl-k">|</span><span class="pl-c1">0</span><span class="pl-k">:</span>b<span class="pl-k">&lt;&lt;</span><span class="pl-c1">32</span><span class="pl-k">-</span>a)<span class="pl-k">+</span><span class="pl-c1">0x10000000000</span><span class="pl-k">*</span>a},<span class="pl-en">getPartial</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(a<span class="pl-k">/</span><span class="pl-c1">0x10000000000</span>)<span class="pl-k">||</span><span class="pl-c1">32</span>},<span class="pl-en">equal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(a)<span class="pl-k">!==</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(b))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,d;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)c<span class="pl-k">|=</span>a[d]<span class="pl-k">^</span>b[d];<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">c},$<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e;e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>[]);<span class="pl-c1">32</span><span class="pl-k">&lt;=</span>b;b<span class="pl-k">-=</span><span class="pl-c1">32</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c),c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(a);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(c<span class="pl-k">|</span>a[e]<span class="pl-k">&gt;&gt;&gt;</span>b),c<span class="pl-k">=</span>a[e]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">32</span><span class="pl-k">-</span>b;e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-c1">0</span>;a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">getPartial</span>(e);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">partial</span>(b<span class="pl-k">+</span>a<span class="pl-k">&amp;</span><span class="pl-c1">31</span>,<span class="pl-c1">32</span><span class="pl-k">&lt;</span>b<span class="pl-k">+</span>a<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">pop</span>(),<span class="pl-c1">1</span>));<span class="pl-k">return</span> d},<span class="pl-en">i</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">^</span>b[<span class="pl-c1">0</span>],a[<span class="pl-c1">1</span>]<span class="pl-k">^</span>b[<span class="pl-c1">1</span>],a[<span class="pl-c1">2</span>]<span class="pl-k">^</span>b[<span class="pl-c1">2</span>],a[<span class="pl-c1">3</span>]<span class="pl-k">^</span>b[<span class="pl-c1">3</span>]]},<span class="pl-en">byteswapM</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>b)c<span class="pl-k">=</span>a[b],a[b]<span class="pl-k">=</span>c<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span><span class="pl-k">|</span>c<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">0xff00</span><span class="pl-k">|</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">0xff00</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span>c<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span>;<span class="pl-k">return</span> a}};</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span><span class="pl-k">=</span>{<span class="pl-en">fromBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(a),d,e;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c<span class="pl-k">/</span><span class="pl-c1">8</span>;d<span class="pl-k">++</span>)<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">3</span>)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>a[d<span class="pl-k">/</span><span class="pl-c1">4</span>]),b<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">24</span>),e<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">8</span>;<span class="pl-k">return</span> <span class="pl-c1">decodeURIComponent</span>(<span class="pl-c1">escape</span>(b))},<span class="pl-en">toBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">unescape</span>(<span class="pl-c1">encodeURIComponent</span>(a));<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c,d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)d<span class="pl-k">=</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(c),<span class="pl-c1">3</span><span class="pl-k">===</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">3</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(d),d<span class="pl-k">=</span><span class="pl-c1">0</span>);c<span class="pl-k">&amp;</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">partial</span>(<span class="pl-c1">8</span><span class="pl-k">*</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">3</span>),d));<span class="pl-k">return</span> b}};</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">hex</span><span class="pl-k">=</span>{<span class="pl-en">fromBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,c;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)b<span class="pl-k">+=</span>((a[c]<span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-c1">0xf00000000000</span>).<span class="pl-c1">toString</span>(<span class="pl-c1">16</span>).<span class="pl-c1">substr</span>(<span class="pl-c1">4</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(a)<span class="pl-k">/</span><span class="pl-c1">4</span>)},<span class="pl-en">toBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span>[],d;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">|</span>0x<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;a<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>00000000<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">+=</span><span class="pl-c1">8</span>)<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-c1">parseInt</span>(<span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(b,<span class="pl-c1">8</span>),<span class="pl-c1">16</span>)<span class="pl-k">^</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">clamp</span>(c,<span class="pl-c1">4</span><span class="pl-k">*</span>d)}};</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span><span class="pl-k">=</span>{<span class="pl-c1">B</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZ234567<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">X</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>0123456789ABCDEFGHIJKLMNOPQRSTUV<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">BITS</span><span class="pl-k">:</span><span class="pl-c1">32</span>,<span class="pl-c1">BASE</span><span class="pl-k">:</span><span class="pl-c1">5</span>,<span class="pl-c1">REMAINING</span><span class="pl-k">:</span><span class="pl-c1">27</span>,<span class="pl-en">fromBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">BASE</span>,e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">REMAINING</span>,f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">B</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,l<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(a);c<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">X</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">*</span>d<span class="pl-k">&lt;</span>l;)f<span class="pl-k">+=</span><span class="pl-smi">h</span>.<span class="pl-c1">charAt</span>((k<span class="pl-k">^</span>a[c]<span class="pl-k">&gt;&gt;&gt;</span>g)<span class="pl-k">&gt;&gt;&gt;</span>e),g<span class="pl-k">&lt;</span>d<span class="pl-k">?</span>(k<span class="pl-k">=</span>a[c]<span class="pl-k">&lt;&lt;</span>d<span class="pl-k">-</span>g,g<span class="pl-k">+=</span>e,c<span class="pl-k">++</span>)<span class="pl-k">:</span>(k<span class="pl-k">&lt;&lt;=</span>d,g<span class="pl-k">-=</span>d);<span class="pl-k">for</span>(;<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;</span><span class="pl-c1">7</span><span class="pl-k">&amp;&amp;!</span>b;)f<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> f},<span class="pl-en">toBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">|</span>=<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toUpperCase</span>();<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">BITS</span>,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">BASE</span>,e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">REMAINING</span>,f<span class="pl-k">=</span>[],g,h<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">B</span>,l<span class="pl-k">=</span><span class="pl-c1">0</span>,n,m<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>base32<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-c1">X</span>,m<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>base32hex<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>){n<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(g));<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>n){<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32hex</span>.<span class="pl-en">toBits</span>(a)}<span class="pl-k">catch</span>(p){}<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>this isn&#39;t <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span>);}h<span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(h<span class="pl-k">-=</span>e,<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(l<span class="pl-k">^</span>n<span class="pl-k">&gt;&gt;&gt;</span>h),l<span class="pl-k">=</span>n<span class="pl-k">&lt;&lt;</span>c<span class="pl-k">-</span>h)<span class="pl-k">:</span>(h<span class="pl-k">+=</span>d,l<span class="pl-k">^=</span>n<span class="pl-k">&lt;&lt;</span>c<span class="pl-k">-</span>h)}h<span class="pl-k">&amp;</span><span class="pl-c1">56</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">partial</span>(h<span class="pl-k">&amp;</span><span class="pl-c1">56</span>,l,<span class="pl-c1">1</span>));<span class="pl-k">return</span> f}};</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32hex</span><span class="pl-k">=</span>{<span class="pl-en">fromBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-en">fromBits</span>(a,b,<span class="pl-c1">1</span>)},<span class="pl-en">toBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base32</span>.<span class="pl-en">toBits</span>(a,<span class="pl-c1">1</span>)}};</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span><span class="pl-k">=</span>{<span class="pl-c1">B</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/<span class="pl-pds">&quot;</span></span>,<span class="pl-en">fromBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-c1">B</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(a);c<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">62</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-_<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">*</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>h;)d<span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">charAt</span>((g<span class="pl-k">^</span>a[c]<span class="pl-k">&gt;&gt;&gt;</span>e)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">26</span>),<span class="pl-c1">6</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(g<span class="pl-k">=</span>a[c]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">-</span>e,e<span class="pl-k">+=</span><span class="pl-c1">26</span>,c<span class="pl-k">++</span>)<span class="pl-k">:</span>(g<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">6</span>,e<span class="pl-k">-=</span><span class="pl-c1">6</span>);<span class="pl-k">for</span>(;<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;!</span>b;)d<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> d},<span class="pl-en">toBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">|</span>=<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d,e<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-c1">B</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,h;b<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">62</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-_<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(d));</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>h)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>this isn&#39;t base64!<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">26</span><span class="pl-k">&lt;</span>e<span class="pl-k">?</span>(e<span class="pl-k">-=</span><span class="pl-c1">26</span>,<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(g<span class="pl-k">^</span>h<span class="pl-k">&gt;&gt;&gt;</span>e),g<span class="pl-k">=</span>h<span class="pl-k">&lt;&lt;</span><span class="pl-c1">32</span><span class="pl-k">-</span>e)<span class="pl-k">:</span>(e<span class="pl-k">+=</span><span class="pl-c1">6</span>,g<span class="pl-k">^=</span>h<span class="pl-k">&lt;&lt;</span><span class="pl-c1">32</span><span class="pl-k">-</span>e)}e<span class="pl-k">&amp;</span><span class="pl-c1">56</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">partial</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">56</span>,g,<span class="pl-c1">1</span>));<span class="pl-k">return</span> c}};<span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64url</span><span class="pl-k">=</span>{<span class="pl-en">fromBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">fromBits</span>(a,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>)},<span class="pl-en">toBits</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(a,<span class="pl-c1">1</span>)}};<span class="pl-smi">sjcl</span>.<span class="pl-c1">hash</span>.<span class="pl-en">sha256</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">b</span>[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">O</span>();a<span class="pl-k">?</span>(<span class="pl-c1">this</span>.<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">F</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">A</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">l</span>)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">reset</span>()};<span class="pl-smi">sjcl</span>.<span class="pl-c1">hash</span>.<span class="pl-smi">sha256</span>.<span class="pl-en">hash</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">sjcl.hash.sha256</span>).<span class="pl-en">update</span>(a).<span class="pl-en">finalize</span>()};</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-c1">hash</span>.<span class="pl-smi">sha256</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{blockSize<span class="pl-k">:</span><span class="pl-c1">512</span>,<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">Y</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-c1">A</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">update</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">toBits</span>(a));<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-c1">concat</span>(<span class="pl-c1">this</span>.<span class="pl-c1">A</span>,a);b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">l</span>;a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(a);<span class="pl-k">if</span>(<span class="pl-c1">0x1fffffffffffff</span><span class="pl-k">&lt;</span>a)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot hash more than 2^53 - 1 bits<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">Uint32Array</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(c),e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">512</span><span class="pl-k">+</span>b<span class="pl-k">-</span>(<span class="pl-c1">512</span><span class="pl-k">+</span>b<span class="pl-k">&amp;</span><span class="pl-c1">0x1ff</span>);b<span class="pl-k">&lt;=</span>a;b<span class="pl-k">+=</span><span class="pl-c1">512</span>)<span class="pl-en">u</span>(<span class="pl-c1">this</span>,<span class="pl-smi">d</span>.<span class="pl-en">subarray</span>(<span class="pl-c1">16</span><span class="pl-k">*</span>e,</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">16</span><span class="pl-k">*</span>(e<span class="pl-k">+</span><span class="pl-c1">1</span>))),e<span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">16</span><span class="pl-k">*</span>e)}<span class="pl-k">else</span> <span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">512</span><span class="pl-k">+</span>b<span class="pl-k">-</span>(<span class="pl-c1">512</span><span class="pl-k">+</span>b<span class="pl-k">&amp;</span><span class="pl-c1">0x1ff</span>);b<span class="pl-k">&lt;=</span>a;b<span class="pl-k">+=</span><span class="pl-c1">512</span>)<span class="pl-en">u</span>(<span class="pl-c1">this</span>,<span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">16</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">finalize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">A</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">F</span>,b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-c1">concat</span>(b,[<span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">partial</span>(<span class="pl-c1">1</span>,<span class="pl-c1">1</span>)]);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-c1">2</span>;a<span class="pl-k">&amp;</span><span class="pl-c1">15</span>;a<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">/</span><span class="pl-c1">0x100000000</span>));<span class="pl-k">for</span>(<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-smi">l</span><span class="pl-k">|</span><span class="pl-c1">0</span>);<span class="pl-smi">b</span>.<span class="pl-c1">length</span>;)<span class="pl-en">u</span>(<span class="pl-c1">this</span>,<span class="pl-smi">b</span>.<span class="pl-c1">splice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">16</span>));<span class="pl-c1">this</span>.<span class="pl-c1">reset</span>();<span class="pl-k">return</span> c},<span class="pl-c1">Y</span><span class="pl-k">:</span>[],b<span class="pl-k">:</span>[],<span class="pl-en">O</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0x100000000</span><span class="pl-k">*</span>(a<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(a))<span class="pl-k">|</span><span class="pl-c1">0</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">2</span>,d,e;<span class="pl-c1">64</span><span class="pl-k">&gt;</span>b;c<span class="pl-k">++</span>){e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">2</span>;d<span class="pl-k">*</span>d<span class="pl-k">&lt;=</span>c;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>c<span class="pl-k">%</span>d){e<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}e<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">8</span><span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-c1">Y</span>[b]<span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(c,<span class="pl-c1">.5</span>))),<span class="pl-c1">this</span>.<span class="pl-smi">b</span>[b]<span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(c,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-c1">3</span>)),b<span class="pl-k">++</span>)}}};</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">u</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">F</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>,h<span class="pl-k">=</span>f[<span class="pl-c1">0</span>],k<span class="pl-k">=</span>f[<span class="pl-c1">1</span>],l<span class="pl-k">=</span>f[<span class="pl-c1">2</span>],n<span class="pl-k">=</span>f[<span class="pl-c1">3</span>],m<span class="pl-k">=</span>f[<span class="pl-c1">4</span>],p<span class="pl-k">=</span>f[<span class="pl-c1">5</span>],r<span class="pl-k">=</span>f[<span class="pl-c1">6</span>],q<span class="pl-k">=</span>f[<span class="pl-c1">7</span>];<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">64</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-c1">16</span><span class="pl-k">&gt;</span>c<span class="pl-k">?</span>d<span class="pl-k">=</span>b[c]<span class="pl-k">:</span>(d<span class="pl-k">=</span>b[c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&amp;</span><span class="pl-c1">15</span>],e<span class="pl-k">=</span>b[c<span class="pl-k">+</span><span class="pl-c1">14</span><span class="pl-k">&amp;</span><span class="pl-c1">15</span>],d<span class="pl-k">=</span>b[c<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">=</span>(d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">7</span><span class="pl-k">^</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">18</span><span class="pl-k">^</span>d<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">3</span><span class="pl-k">^</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">25</span><span class="pl-k">^</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">14</span>)<span class="pl-k">+</span>(e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">17</span><span class="pl-k">^</span>e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">19</span><span class="pl-k">^</span>e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">10</span><span class="pl-k">^</span>e<span class="pl-k">&lt;&lt;</span><span class="pl-c1">15</span><span class="pl-k">^</span>e<span class="pl-k">&lt;&lt;</span><span class="pl-c1">13</span>)<span class="pl-k">+</span>b[c<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>b[c<span class="pl-k">+</span><span class="pl-c1">9</span><span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">|</span><span class="pl-c1">0</span>),d<span class="pl-k">=</span>d<span class="pl-k">+</span>q<span class="pl-k">+</span>(m<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">6</span><span class="pl-k">^</span>m<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">11</span><span class="pl-k">^</span>m<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">25</span><span class="pl-k">^</span>m<span class="pl-k">&lt;&lt;</span><span class="pl-c1">26</span><span class="pl-k">^</span>m<span class="pl-k">&lt;&lt;</span><span class="pl-c1">21</span><span class="pl-k">^</span>m<span class="pl-k">&lt;&lt;</span><span class="pl-c1">7</span>)<span class="pl-k">+</span>(r<span class="pl-k">^</span>m<span class="pl-k">&amp;</span>(p<span class="pl-k">^</span>r))<span class="pl-k">+</span>g[c],q<span class="pl-k">=</span>r,r<span class="pl-k">=</span>p,p<span class="pl-k">=</span>m,m<span class="pl-k">=</span>n<span class="pl-k">+</span>d<span class="pl-k">|</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span>l,l<span class="pl-k">=</span>k,k<span class="pl-k">=</span>h,h<span class="pl-k">=</span>d<span class="pl-k">+</span>(k<span class="pl-k">&amp;</span>l<span class="pl-k">^</span>n<span class="pl-k">&amp;</span>(k<span class="pl-k">^</span>l))<span class="pl-k">+</span>(k<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">2</span><span class="pl-k">^</span>k<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">13</span><span class="pl-k">^</span>k<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">22</span><span class="pl-k">^</span>k<span class="pl-k">&lt;&lt;</span><span class="pl-c1">30</span><span class="pl-k">^</span>k<span class="pl-k">&lt;&lt;</span><span class="pl-c1">19</span><span class="pl-k">^</span>k<span class="pl-k">&lt;&lt;</span><span class="pl-c1">10</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">0</span>]<span class="pl-k">=</span>f[<span class="pl-c1">0</span>]<span class="pl-k">+</span>h<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">1</span>]<span class="pl-k">=</span>f[<span class="pl-c1">1</span>]<span class="pl-k">+</span>k<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">2</span>]<span class="pl-k">=</span>f[<span class="pl-c1">2</span>]<span class="pl-k">+</span>l<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">3</span>]<span class="pl-k">=</span>f[<span class="pl-c1">3</span>]<span class="pl-k">+</span>n<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">4</span>]<span class="pl-k">=</span>f[<span class="pl-c1">4</span>]<span class="pl-k">+</span>m<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">5</span>]<span class="pl-k">=</span>f[<span class="pl-c1">5</span>]<span class="pl-k">+</span>p<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">6</span>]<span class="pl-k">=</span>f[<span class="pl-c1">6</span>]<span class="pl-k">+</span>r<span class="pl-k">|</span><span class="pl-c1">0</span>;f[<span class="pl-c1">7</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">f[<span class="pl-c1">7</span>]<span class="pl-k">+</span>q<span class="pl-k">|</span><span class="pl-c1">0</span>}</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span><span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ccm<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">G</span><span class="pl-k">:</span>[],<span class="pl-en">listenProgress</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-c1">G</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">unListenProgress</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-c1">G</span>.<span class="pl-c1">indexOf</span>(a);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-c1">G</span>.<span class="pl-c1">splice</span>(a,<span class="pl-c1">1</span>)},<span class="pl-en">fa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-c1">G</span>.<span class="pl-c1">slice</span>(),c;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">+=</span><span class="pl-c1">1</span>)b[c](a)},<span class="pl-en">encrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">bitLength</span>(c)<span class="pl-k">/</span><span class="pl-c1">8</span>,l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">bitLength</span>(g)<span class="pl-k">/</span><span class="pl-c1">8</span>;e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">64</span>;d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];<span class="pl-k">if</span>(<span class="pl-c1">7</span><span class="pl-k">&gt;</span>k)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ccm: iv must be at least 7 bytes<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>l<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">*</span>f;f<span class="pl-k">++</span>);f<span class="pl-k">&lt;</span><span class="pl-c1">15</span><span class="pl-k">-</span>k<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-c1">15</span><span class="pl-k">-</span>k);c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">clamp</span>(c,</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">8</span><span class="pl-k">*</span>(<span class="pl-c1">15</span><span class="pl-k">-</span>f));b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">V</span>(a,b,c,d,e,f);g<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">C</span>(a,g,c,b,e,f);<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">g</span>.<span class="pl-c1">data</span>,<span class="pl-smi">g</span>.<span class="pl-smi">tag</span>)},<span class="pl-en">decrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">64</span>;d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">bitLength</span>(c)<span class="pl-k">/</span><span class="pl-c1">8</span>,h<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">bitLength</span>(b),k<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">clamp</span>(b,h<span class="pl-k">-</span>e),l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">bitSlice</span>(b,h<span class="pl-k">-</span>e),h<span class="pl-k">=</span>(h<span class="pl-k">-</span>e)<span class="pl-k">/</span><span class="pl-c1">8</span>;<span class="pl-k">if</span>(<span class="pl-c1">7</span><span class="pl-k">&gt;</span>g)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ccm: iv must be at least 7 bytes<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">*</span>b;b<span class="pl-k">++</span>);b<span class="pl-k">&lt;</span><span class="pl-c1">15</span><span class="pl-k">-</span>g<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">15</span><span class="pl-k">-</span>g);c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">clamp</span>(c,<span class="pl-c1">8</span><span class="pl-k">*</span>(<span class="pl-c1">15</span><span class="pl-k">-</span>b));k<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">C</span>(a,k,c,l,e,b);a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">V</span>(a,<span class="pl-smi">k</span>.<span class="pl-c1">data</span>,c,d,e,b);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-en">equal</span>(<span class="pl-smi">k</span>.<span class="pl-smi">tag</span>,a))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.corrupt</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ccm: tag doesn&#39;t match<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-c1">data</span>},<span class="pl-en">na</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>[],h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">i</span>;d<span class="pl-k">=</span>[<span class="pl-smi">h</span>.<span class="pl-en">partial</span>(<span class="pl-c1">8</span>,(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">64</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">|</span>d<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">2</span><span class="pl-k">|</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>)];d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">concat</span>(d,c);d[<span class="pl-c1">3</span>]<span class="pl-k">|=</span>e;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(d);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">bitLength</span>(b)<span class="pl-k">/</span><span class="pl-c1">8</span>,<span class="pl-c1">65279</span><span class="pl-k">&gt;=</span>c<span class="pl-k">?</span>g<span class="pl-k">=</span>[<span class="pl-smi">h</span>.<span class="pl-en">partial</span>(<span class="pl-c1">16</span>,c)]<span class="pl-k">:</span><span class="pl-c1">0xffffffff</span><span class="pl-k">&gt;=</span>c<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">concat</span>([<span class="pl-smi">h</span>.<span class="pl-en">partial</span>(<span class="pl-c1">16</span>,<span class="pl-c1">65534</span>)],[c])),g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">concat</span>(g,b),b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;b<span class="pl-k">+=</span><span class="pl-c1">4</span>)d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">k</span>(d,<span class="pl-smi">g</span>.<span class="pl-c1">slice</span>(b,b<span class="pl-k">+</span><span class="pl-c1">4</span>).<span class="pl-c1">concat</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])));<span class="pl-k">return</span> d},<span class="pl-en">V</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">i</span>;e<span class="pl-k">/=</span><span class="pl-c1">8</span>;<span class="pl-k">if</span>(e<span class="pl-k">%</span><span class="pl-c1">2</span><span class="pl-k">||</span><span class="pl-c1">4</span><span class="pl-k">&gt;</span>e<span class="pl-k">||</span><span class="pl-c1">16</span><span class="pl-k">&lt;</span>e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ccm: invalid tag length<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-c1">0xffffffff</span><span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">0xffffffff</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.bug</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ccm: can&#39;t deal with 4GiB or more data<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">na</span>(a,d,c,e,<span class="pl-smi">g</span>.<span class="pl-en">bitLength</span>(b)<span class="pl-k">/</span><span class="pl-c1">8</span>,f);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">+=</span><span class="pl-c1">4</span>)c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">h</span>(c,<span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(d,d<span class="pl-k">+</span><span class="pl-c1">4</span>).<span class="pl-c1">concat</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>])));<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-en">clamp</span>(c,<span class="pl-c1">8</span><span class="pl-k">*</span>e)},<span class="pl-en">C</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g,h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>;g<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">i</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,l<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">bitLength</span>(b),n<span class="pl-k">=</span>k<span class="pl-k">/</span><span class="pl-c1">50</span>,m<span class="pl-k">=</span>n;c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">concat</span>([<span class="pl-smi">h</span>.<span class="pl-en">partial</span>(<span class="pl-c1">8</span>,f<span class="pl-k">-</span><span class="pl-c1">1</span>)],c).<span class="pl-c1">concat</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]).<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-c1">4</span>);d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">bitSlice</span>(<span class="pl-en">g</span>(d,<span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(c)),<span class="pl-c1">0</span>,e);<span class="pl-k">if</span>(<span class="pl-k">!</span>k)<span class="pl-k">return</span>{tag<span class="pl-k">:</span>d,data<span class="pl-k">:</span>[]};<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>k;g<span class="pl-k">+=</span><span class="pl-c1">4</span>)g<span class="pl-k">&gt;</span>n<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">fa</span>(g<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">k),n<span class="pl-k">+=</span>m),c[<span class="pl-c1">3</span>]<span class="pl-k">++</span>,e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(c),b[g]<span class="pl-k">^=</span>e[<span class="pl-c1">0</span>],b[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">^=</span>e[<span class="pl-c1">1</span>],b[g<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">^=</span>e[<span class="pl-c1">2</span>],b[g<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">^=</span>e[<span class="pl-c1">3</span>];<span class="pl-k">return</span>{tag<span class="pl-k">:</span>d,data<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-en">clamp</span>(b,l)}}};</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ocb2</span><span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ocb2<span class="pl-pds">&quot;</span></span>,<span class="pl-en">encrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-c1">128</span><span class="pl-k">!==</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(c))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ocb iv must be 128 bits<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> g,h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ocb2</span>.<span class="pl-c1">S</span>,k<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,l<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">i</span>,n<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];c<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(c));<span class="pl-k">var</span> m,p<span class="pl-k">=</span>[];d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">64</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;g<span class="pl-k">+=</span><span class="pl-c1">4</span>)m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(g,g<span class="pl-k">+</span><span class="pl-c1">4</span>),n<span class="pl-k">=</span><span class="pl-en">l</span>(n,m),p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">concat</span>(<span class="pl-en">l</span>(c,<span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">l</span>(c,m)))),c<span class="pl-k">=</span><span class="pl-en">h</span>(c);m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(g);b<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">bitLength</span>(m);g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">l</span>(c,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b]));m<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">clamp</span>(<span class="pl-en">l</span>(<span class="pl-smi">m</span>.<span class="pl-c1">concat</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]),g),b);n<span class="pl-k">=</span><span class="pl-en">l</span>(n,<span class="pl-en">l</span>(<span class="pl-smi">m</span>.<span class="pl-c1">concat</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]),g));n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">l</span>(n,<span class="pl-en">l</span>(c,<span class="pl-en">h</span>(c))));</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-en">l</span>(n,f<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ocb2</span>.<span class="pl-en">pmac</span>(a,d)));<span class="pl-k">return</span> <span class="pl-smi">p</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">k</span>.<span class="pl-c1">concat</span>(m,<span class="pl-smi">k</span>.<span class="pl-en">clamp</span>(n,e)))},<span class="pl-en">decrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-c1">128</span><span class="pl-k">!==</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(c))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ocb iv must be 128 bits<span class="pl-pds">&quot;</span></span>);e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">64</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ocb2</span>.<span class="pl-c1">S</span>,h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">i</span>,l<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],n<span class="pl-k">=</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(c)),m,p,r<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-en">bitLength</span>(b)<span class="pl-k">-</span>e,q<span class="pl-k">=</span>[];d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&lt;</span>r<span class="pl-k">/</span><span class="pl-c1">32</span>;c<span class="pl-k">+=</span><span class="pl-c1">4</span>)m<span class="pl-k">=</span><span class="pl-en">k</span>(n,<span class="pl-smi">a</span>.<span class="pl-en">decrypt</span>(<span class="pl-en">k</span>(n,<span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(c,c<span class="pl-k">+</span><span class="pl-c1">4</span>)))),l<span class="pl-k">=</span><span class="pl-en">k</span>(l,m),q<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">concat</span>(m),n<span class="pl-k">=</span><span class="pl-en">g</span>(n);p<span class="pl-k">=</span>r<span class="pl-k">-</span><span class="pl-c1">32</span><span class="pl-k">*</span>c;m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">k</span>(n,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,p]));m<span class="pl-k">=</span><span class="pl-en">k</span>(m,<span class="pl-smi">h</span>.<span class="pl-en">clamp</span>(<span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(c),p).<span class="pl-c1">concat</span>([<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">0</span>]));l<span class="pl-k">=</span><span class="pl-en">k</span>(l,m);l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">k</span>(l,<span class="pl-en">k</span>(n,<span class="pl-en">g</span>(n))));<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-en">k</span>(l,f<span class="pl-k">?</span>d<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ocb2</span>.<span class="pl-en">pmac</span>(a,d)));<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">h</span>.<span class="pl-en">equal</span>(<span class="pl-smi">h</span>.<span class="pl-en">clamp</span>(l,e),<span class="pl-smi">h</span>.<span class="pl-en">bitSlice</span>(b,r)))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.corrupt</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ocb: tag doesn&#39;t match<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">q</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">h</span>.<span class="pl-en">clamp</span>(m,p))},<span class="pl-en">pmac</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">ocb2</span>.<span class="pl-c1">S</span>,e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">i</span>,g<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]),h<span class="pl-k">=</span><span class="pl-en">f</span>(h,<span class="pl-en">d</span>(<span class="pl-en">d</span>(h)));<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">+=</span><span class="pl-c1">4</span>)h<span class="pl-k">=</span><span class="pl-en">d</span>(h),g<span class="pl-k">=</span><span class="pl-en">f</span>(g,<span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">f</span>(h,<span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(c,c<span class="pl-k">+</span><span class="pl-c1">4</span>))));c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(c);<span class="pl-c1">128</span><span class="pl-k">&gt;</span><span class="pl-smi">e</span>.<span class="pl-en">bitLength</span>(c)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-en">f</span>(h,<span class="pl-en">d</span>(h)),c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">concat</span>(c,[<span class="pl-k">-</span><span class="pl-c1">2147483648</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]));g<span class="pl-k">=</span><span class="pl-en">f</span>(g,c);</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-en">f</span>(<span class="pl-en">d</span>(<span class="pl-en">f</span>(h,<span class="pl-en">d</span>(h))),g))},<span class="pl-en">S</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>[a[<span class="pl-c1">0</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span>a[<span class="pl-c1">1</span>]<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">31</span>,a[<span class="pl-c1">1</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span>a[<span class="pl-c1">2</span>]<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">31</span>,a[<span class="pl-c1">2</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span>a[<span class="pl-c1">3</span>]<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">31</span>,a[<span class="pl-c1">3</span>]<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">^</span><span class="pl-c1">135</span><span class="pl-k">*</span>(a[<span class="pl-c1">0</span>]<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">31</span>)]}};</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span><span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>gcm<span class="pl-pds">&quot;</span></span>,<span class="pl-en">encrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>;d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">C</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,a,f,d,c,e<span class="pl-k">||</span><span class="pl-c1">128</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">data</span>,<span class="pl-smi">a</span>.<span class="pl-smi">tag</span>)},<span class="pl-en">decrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),g<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">bitLength</span>(f);e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">128</span>;d<span class="pl-k">=</span>d<span class="pl-k">||</span>[];e<span class="pl-k">&lt;=</span>h<span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">bitSlice</span>(f,h<span class="pl-k">-</span>e),f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">bitSlice</span>(f,<span class="pl-c1">0</span>,h<span class="pl-k">-</span>e))<span class="pl-k">:</span>(b<span class="pl-k">=</span>f,f<span class="pl-k">=</span>[]);a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">C</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,a,f,d,c,e);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-en">equal</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tag</span>,b))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.corrupt</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>gcm: tag doesn&#39;t match<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">data</span>},<span class="pl-en">ka</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e,f,g,h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>.<span class="pl-smi">i</span>;e<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,<span class="pl-c1">0</span>];f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">128</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>){(d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span>(a[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(c<span class="pl-k">/</span><span class="pl-c1">32</span>)]<span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">31</span><span class="pl-k">-</span>c<span class="pl-k">%</span><span class="pl-c1">32</span>))<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-en">h</span>(e,f));g<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span>(f[<span class="pl-c1">3</span>]<span class="pl-k">&amp;</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>d;d<span class="pl-k">--</span>)f[d]<span class="pl-k">=</span>f[d]<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">1</span><span class="pl-k">|</span>(f[d<span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">31</span>;f[<span class="pl-c1">0</span>]<span class="pl-k">&gt;&gt;&gt;=</span><span class="pl-c1">1</span>;g<span class="pl-k">&amp;&amp;</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">^=</span><span class="pl-k">-</span><span class="pl-c1">0x1f000000</span>)}<span class="pl-k">return</span> e},<span class="pl-en">j</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">+=</span><span class="pl-c1">4</span>)b[<span class="pl-c1">0</span>]<span class="pl-k">^=</span><span class="pl-c1">0xffffffff</span><span class="pl-k">&amp;</span>c[d],b[<span class="pl-c1">1</span>]<span class="pl-k">^=</span><span class="pl-c1">0xffffffff</span><span class="pl-k">&amp;</span>c[d<span class="pl-k">+</span><span class="pl-c1">1</span>],b[<span class="pl-c1">2</span>]<span class="pl-k">^=</span><span class="pl-c1">0xffffffff</span><span class="pl-k">&amp;</span>c[d<span class="pl-k">+</span><span class="pl-c1">2</span>],b[<span class="pl-c1">3</span>]<span class="pl-k">^=</span><span class="pl-c1">0xffffffff</span><span class="pl-k">&amp;</span>c[d<span class="pl-k">+</span><span class="pl-c1">3</span>],b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">ka</span>(b,a);<span class="pl-k">return</span> b},<span class="pl-en">C</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> g,h,k,l,n,m,p,r,q<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>;m<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;p<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">bitLength</span>(c);r<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">bitLength</span>(d);h<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">bitLength</span>(e);</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">encrypt</span>([<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]);<span class="pl-c1">96</span><span class="pl-k">===</span>h<span class="pl-k">?</span>(e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">concat</span>(e,[<span class="pl-c1">1</span>]))<span class="pl-k">:</span>(e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">j</span>(g,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],e),e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">j</span>(g,e,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(h<span class="pl-k">/</span><span class="pl-c1">0x100000000</span>),h<span class="pl-k">&amp;</span><span class="pl-c1">0xffffffff</span>]));h<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">j</span>(g,[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],d);n<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);d<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>);a<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">j</span>(g,h,c));<span class="pl-k">for</span>(l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>m;l<span class="pl-k">+=</span><span class="pl-c1">4</span>)n[<span class="pl-c1">3</span>]<span class="pl-k">++</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">encrypt</span>(n),c[l]<span class="pl-k">^=</span>k[<span class="pl-c1">0</span>],c[l<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">1</span>],c[l<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">2</span>],c[l<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">3</span>];c<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">clamp</span>(c,p);a<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">j</span>(g,h,c));a<span class="pl-k">=</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(r<span class="pl-k">/</span><span class="pl-c1">0x100000000</span>),r<span class="pl-k">&amp;</span><span class="pl-c1">0xffffffff</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(p<span class="pl-k">/</span><span class="pl-c1">0x100000000</span>),p<span class="pl-k">&amp;</span><span class="pl-c1">0xffffffff</span>];d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>.<span class="pl-smi">gcm</span>.<span class="pl-en">j</span>(g,d,a);k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">encrypt</span>(e);</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">d[<span class="pl-c1">0</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">0</span>];d[<span class="pl-c1">1</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">1</span>];d[<span class="pl-c1">2</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">2</span>];d[<span class="pl-c1">3</span>]<span class="pl-k">^=</span>k[<span class="pl-c1">3</span>];<span class="pl-k">return</span>{tag<span class="pl-k">:</span><span class="pl-smi">q</span>.<span class="pl-en">bitSlice</span>(d,<span class="pl-c1">0</span>,f),data<span class="pl-k">:</span>c}}};<span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-en">hmac</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span>b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-smi">sjcl</span>.<span class="pl-c1">hash</span>.<span class="pl-smi">sha256</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span>[[],[]],d,e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">blockSize</span><span class="pl-k">/</span><span class="pl-c1">32</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span><span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">b</span>,<span class="pl-k">new</span> <span class="pl-en">b</span>];<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">hash</span>(a));<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>e;d<span class="pl-k">++</span>)c[<span class="pl-c1">0</span>][d]<span class="pl-k">=</span>a[d]<span class="pl-k">^</span><span class="pl-c1">909522486</span>,c[<span class="pl-c1">1</span>][d]<span class="pl-k">=</span>a[d]<span class="pl-k">^</span><span class="pl-c1">1549556828</span>;<span class="pl-c1">this</span>.<span class="pl-smi">w</span>[<span class="pl-c1">0</span>].<span class="pl-en">update</span>(c[<span class="pl-c1">0</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">w</span>[<span class="pl-c1">1</span>].<span class="pl-en">update</span>(c[<span class="pl-c1">1</span>]);<span class="pl-c1">this</span>.<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>[<span class="pl-c1">0</span>])};</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">hmac</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">encrypt</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">hmac</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">mac</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">aa</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>encrypt on already updated hmac called!<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-en">update</span>(a);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">digest</span>(a)};<span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">hmac</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reset</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">this.W</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>[<span class="pl-c1">0</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">aa</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">hmac</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">aa</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">R</span>.<span class="pl-en">update</span>(a)};<span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">hmac</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">digest</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">R</span>.<span class="pl-en">finalize</span>(),a<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">this.W</span>(<span class="pl-c1">this</span>.<span class="pl-smi">w</span>[<span class="pl-c1">1</span>])).<span class="pl-en">update</span>(a).<span class="pl-en">finalize</span>();<span class="pl-c1">this</span>.<span class="pl-c1">reset</span>();<span class="pl-k">return</span> a};</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-en">pbkdf2</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">1E4</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>c)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid params to pbkdf2<span class="pl-pds">&quot;</span></span>);<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">toBits</span>(a));<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">toBits</span>(b));e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">hmac</span>;a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">e</span>(a);<span class="pl-k">var</span> f,g,h,k,l<span class="pl-k">=</span>[],n<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">bitArray</span>;<span class="pl-k">for</span>(k<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">32</span><span class="pl-k">*</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>(d<span class="pl-k">||</span><span class="pl-c1">1</span>);k<span class="pl-k">++</span>){e<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(<span class="pl-smi">n</span>.<span class="pl-c1">concat</span>(b,[k]));<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">1</span>;g<span class="pl-k">&lt;</span>c;g<span class="pl-k">++</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">encrypt</span>(f),h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)e[h]<span class="pl-k">^=</span>f[h];l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">concat</span>(e)}d<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-en">clamp</span>(l,d));<span class="pl-k">return</span> l};</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-en">prng</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">sjcl.hash.sha256</span>];<span class="pl-c1">this</span>.<span class="pl-smi">m</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">H</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">U</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">f</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">o</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ha</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-smi">h</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">M</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">K</span><span class="pl-k">=</span>{progress<span class="pl-k">:</span>{},seeded<span class="pl-k">:</span>{}};<span class="pl-c1">this</span>.<span class="pl-smi">u</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ga</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-c1">this</span>.<span class="pl-smi">ca</span><span class="pl-k">=</span><span class="pl-c1">0x10000</span>;<span class="pl-c1">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">48</span>,<span class="pl-c1">64</span>,<span class="pl-c1">96</span>,<span class="pl-c1">128</span>,<span class="pl-c1">192</span>,<span class="pl-c1">0x100</span>,<span class="pl-c1">384</span>,<span class="pl-c1">512</span>,<span class="pl-c1">768</span>,<span class="pl-c1">1024</span>];<span class="pl-c1">this</span>.<span class="pl-smi">da</span><span class="pl-k">=</span><span class="pl-c1">3E4</span>;<span class="pl-c1">this</span>.<span class="pl-smi">ba</span><span class="pl-k">=</span><span class="pl-c1">80</span>};</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">prng</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">randomWords</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[],d;d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">isReady</span>(b);<span class="pl-k">var</span> e;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">u</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.notReady</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>generator isn&#39;t seeded<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">J</span>){d<span class="pl-k">=</span><span class="pl-k">!</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">I</span>);e<span class="pl-k">=</span>[];<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,g;<span class="pl-c1">this</span>.<span class="pl-c1">Z</span><span class="pl-k">=</span>e[<span class="pl-c1">0</span>]<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">valueOf</span>()<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">da</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">16</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0x100000000</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">|</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">concat</span>(<span class="pl-c1">this</span>.<span class="pl-smi">c</span>[g].<span class="pl-en">finalize</span>()),f<span class="pl-k">+=</span><span class="pl-c1">this</span>.<span class="pl-smi">m</span>[g],<span class="pl-c1">this</span>.<span class="pl-smi">m</span>[g]<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">||!</span>(<span class="pl-c1">this</span>.<span class="pl-c1">P</span><span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>g));g<span class="pl-k">++</span>);<span class="pl-c1">this</span>.<span class="pl-c1">P</span><span class="pl-k">&gt;=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">sjcl.hash.sha256</span>),<span class="pl-c1">this</span>.<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>));<span class="pl-c1">this</span>.<span class="pl-smi">f</span><span class="pl-k">-=</span>f;f<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">o</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">o</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">f);<span class="pl-c1">this</span>.<span class="pl-c1">P</span><span class="pl-k">++</span>;<span class="pl-c1">this</span>.<span class="pl-smi">b</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-c1">hash</span>.<span class="pl-smi">sha256</span>.<span class="pl-c1">hash</span>(<span class="pl-c1">this</span>.<span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(e));<span class="pl-c1">this</span>.<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sjcl.cipher.aes</span>(<span class="pl-c1">this</span>.<span class="pl-smi">b</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">h</span>[d]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">h</span>[d]<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">|</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">h</span>[d]);d<span class="pl-k">++</span>);}<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">+=</span><span class="pl-c1">4</span>)<span class="pl-c1">0</span><span class="pl-k">===</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">this</span>.<span class="pl-smi">ca</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">y</span>(<span class="pl-c1">this</span>),e<span class="pl-k">=</span><span class="pl-en">z</span>(<span class="pl-c1">this</span>),<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(e[<span class="pl-c1">0</span>],e[<span class="pl-c1">1</span>],e[<span class="pl-c1">2</span>],e[<span class="pl-c1">3</span>]);<span class="pl-en">y</span>(<span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,a)},<span class="pl-en">setDefaultParanoia</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>Setting paranoia=0 will ruin your security; use it only for testing<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Setting paranoia=0 will ruin your security; use it only for testing<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-c1">M</span><span class="pl-k">=</span>a},<span class="pl-en">addEntropy</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> d,e,f<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">valueOf</span>(),g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">H</span>[c],h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">isReady</span>(),k<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">U</span>[c];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">U</span>[c]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">ha</span><span class="pl-k">++</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">H</span>[c]<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-c1">this</span>.<span class="pl-c1">H</span>[c]<span class="pl-k">=</span>(<span class="pl-c1">this</span>.<span class="pl-c1">H</span>[c]<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">%</span><span class="pl-c1">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> a){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-c1">this</span>.<span class="pl-smi">c</span>[g].<span class="pl-en">update</span>([d,<span class="pl-c1">this</span>.<span class="pl-c1">N</span><span class="pl-k">++</span>,<span class="pl-c1">1</span>,b,f,<span class="pl-c1">1</span>,a<span class="pl-k">|</span><span class="pl-c1">0</span>]);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toString</span>.<span class="pl-c1">call</span>(a);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[object Uint32Array]<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>c){e<span class="pl-k">=</span>[];<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(a[c]);a<span class="pl-k">=</span>e}<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>c<span class="pl-k">&amp;&amp;</span>(k<span class="pl-k">=</span><span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>k;c<span class="pl-k">++</span>)<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> a[c]<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">(k<span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>k){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">for</span>(c<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(e<span class="pl-k">=</span>a[c];<span class="pl-c1">0</span><span class="pl-k">&lt;</span>e;)b<span class="pl-k">++</span>,e<span class="pl-k">=</span>e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">c</span>[g].<span class="pl-en">update</span>([d,<span class="pl-c1">this</span>.<span class="pl-c1">N</span><span class="pl-k">++</span>,<span class="pl-c1">2</span>,b,f,<span class="pl-smi">a</span>.<span class="pl-c1">length</span>].<span class="pl-c1">concat</span>(a))}<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>);<span class="pl-c1">this</span>.<span class="pl-smi">c</span>[g].<span class="pl-en">update</span>([d,<span class="pl-c1">this</span>.<span class="pl-c1">N</span><span class="pl-k">++</span>,<span class="pl-c1">3</span>,b,f,<span class="pl-smi">a</span>.<span class="pl-c1">length</span>]);<span class="pl-c1">this</span>.<span class="pl-smi">c</span>[g].<span class="pl-en">update</span>(a);<span class="pl-k">break</span>;<span class="pl-k">default</span>:k<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">if</span>(k)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.bug</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>random: addEntropy only supports number, array of numbers or string<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">this</span>.<span class="pl-smi">m</span>[g]<span class="pl-k">+=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">f</span><span class="pl-k">+=</span>b;h<span class="pl-k">===</span><span class="pl-c1">this</span>.<span class="pl-smi">u</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">isReady</span>()<span class="pl-k">!==</span><span class="pl-c1">this</span>.<span class="pl-smi">u</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>seeded<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">this</span>.<span class="pl-smi">o</span>,<span class="pl-c1">this</span>.<span class="pl-smi">f</span>)),<span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>progress<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-en">getProgress</span>()))},</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-en">isReady</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">T</span>[<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">M</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">o</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">o</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">m</span>[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-smi">ba</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">valueOf</span>()<span class="pl-k">&gt;</span><span class="pl-c1">this</span>.<span class="pl-c1">Z</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">J</span><span class="pl-k">|</span><span class="pl-c1">this</span>.<span class="pl-c1">I</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">I</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">f</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">J</span><span class="pl-k">|</span><span class="pl-c1">this</span>.<span class="pl-smi">u</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">u</span>},<span class="pl-en">getProgress</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">T</span>[a<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">M</span>];<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">o</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">f</span><span class="pl-k">&gt;</span>a<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">f</span><span class="pl-k">/</span>a},<span class="pl-en">startCollectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-c1">D</span>){<span class="pl-c1">this</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>{loadTimeCollector<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">ma</span>),mouseCollector<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">oa</span>),keyboardCollector<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">la</span>),accelerometerCollector<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">ea</span>),touchCollector<span class="pl-k">:</span><span class="pl-en">B</span>(<span class="pl-c1">this</span>,<span class="pl-c1">this</span>.<span class="pl-smi">qa</span>)};<span class="pl-k">if</span>(<span class="pl-c1">window</span>.<span class="pl-smi">addEventListener</span>)<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">loadTimeCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">mouseCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keypress<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">keyboardCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>devicemotion<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">accelerometerCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">touchCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">document</span>.<span class="pl-smi">attachEvent</span>)<span class="pl-c1">document</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onload<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">loadTimeCollector</span>),<span class="pl-c1">document</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onmousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">mouseCollector</span>),<span class="pl-c1">document</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keypress<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">keyboardCollector</span>);<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.bug</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>can&#39;t attach event<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},<span class="pl-en">stopCollectors</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">window</span>.<span class="pl-smi">removeEventListener</span><span class="pl-k">?</span>(<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">loadTimeCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">mouseCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keypress<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">keyboardCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>devicemotion<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">accelerometerCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>touchmove<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">touchCollector</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>))<span class="pl-k">:</span><span class="pl-c1">document</span>.<span class="pl-smi">detachEvent</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">document</span>.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onload<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">loadTimeCollector</span>),<span class="pl-c1">document</span>.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onmousemove<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">mouseCollector</span>),<span class="pl-c1">document</span>.<span class="pl-c1">detachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keypress<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">this</span>.<span class="pl-smi">a</span>.<span class="pl-smi">keyboardCollector</span>)),<span class="pl-c1">this</span>.<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">addEventListener</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">K</span>[a][<span class="pl-c1">this</span>.<span class="pl-smi">ga</span><span class="pl-k">++</span>]<span class="pl-k">=</span>b},<span class="pl-en">removeEventListener</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d,e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">K</span>[a],f<span class="pl-k">=</span>[];<span class="pl-k">for</span>(d <span class="pl-k">in</span> e)<span class="pl-smi">e</span>.<span class="pl-en">hasOwnProperty</span>(d)<span class="pl-k">&amp;&amp;</span>e[d]<span class="pl-k">===</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">push</span>(d);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)d<span class="pl-k">=</span>f[c],<span class="pl-k">delete</span> e[d]},<span class="pl-en">la</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">C</span>(<span class="pl-c1">this</span>,<span class="pl-c1">1</span>)},<span class="pl-en">oa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">try</span>{b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetX</span><span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">offsetY</span><span class="pl-k">||</span><span class="pl-c1">0</span>}<span class="pl-k">catch</span>(d){c<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-c1">0</span><span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addEntropy</span>([b,c],<span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mouse<span class="pl-pds">&quot;</span></span>);<span class="pl-en">C</span>(<span class="pl-c1">this</span>,<span class="pl-c1">0</span>)},<span class="pl-en">qa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">touches</span>[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">changedTouches</span>[<span class="pl-c1">0</span>];<span class="pl-c1">this</span>.<span class="pl-en">addEntropy</span>([<span class="pl-smi">a</span>.<span class="pl-c1">pageX</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span>,<span class="pl-smi">a</span>.<span class="pl-c1">pageY</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span>],<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>touch<span class="pl-pds">&quot;</span></span>);<span class="pl-en">C</span>(<span class="pl-c1">this</span>,<span class="pl-c1">0</span>)},<span class="pl-en">ma</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">C</span>(<span class="pl-c1">this</span>,<span class="pl-c1">2</span>)},<span class="pl-en">ea</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">accelerationIncludingGravity</span>.<span class="pl-c1">x</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">accelerationIncludingGravity</span>.<span class="pl-c1">y</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">accelerationIncludingGravity</span>.<span class="pl-c1">z</span>;<span class="pl-k">if</span>(<span class="pl-c1">window</span>.<span class="pl-smi">orientation</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-smi">orientation</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addEntropy</span>(b,<span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>accelerometer<span class="pl-pds">&quot;</span></span>)}a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">addEntropy</span>(a,<span class="pl-c1">2</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>accelerometer<span class="pl-pds">&quot;</span></span>);<span class="pl-en">C</span>(<span class="pl-c1">this</span>,<span class="pl-c1">0</span>)}};</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">A</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,d<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">random</span>.<span class="pl-c1">K</span>[a],e<span class="pl-k">=</span>[];<span class="pl-k">for</span>(c <span class="pl-k">in</span> d)<span class="pl-smi">d</span>.<span class="pl-en">hasOwnProperty</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>(d[c]);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)e[c](b)}function C(a,b){&quot;undefined&quot;!==typeof window&amp;&amp;window.performance&amp;&amp;&quot;function&quot;===typeof window.performance.now?a.addEntropy(window.performance.now(),b,&quot;loadtime&quot;):a.addEntropy((new Date).valueOf(),b,&quot;loadtime&quot;)}function y(a){a.b=z(a).concat(z(a));a.L=new sjcl.cipher.aes(a.b)}function z(a){for(var b=0;4&gt;b&amp;&amp;(a.h[b]=a.h[b]+1|0,!a.h[b]);b++);return a.L.encrypt(a.h)}</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">B</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(a,<span class="pl-c1">arguments</span>)}}<span class="pl-smi">sjcl</span>.<span class="pl-smi">random</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sjcl.prng</span>(<span class="pl-c1">6</span>);</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">:</span><span class="pl-k">try</span>{<span class="pl-k">var</span> <span class="pl-c1">D</span>,<span class="pl-c1">E</span>,<span class="pl-c1">F</span>,<span class="pl-c1">G</span>;<span class="pl-k">if</span>(<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span>){<span class="pl-k">var</span> <span class="pl-c1">H</span>;<span class="pl-k">try</span>{<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>crypto<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(a){<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">H</span>}<span class="pl-k">if</span>(<span class="pl-c1">G</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">E</span>.<span class="pl-smi">randomBytes</span>)<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-en">randomBytes</span>(<span class="pl-c1">128</span>),<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>((<span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-c1">D</span>)).<span class="pl-smi">buffer</span>),<span class="pl-smi">sjcl</span>.<span class="pl-smi">random</span>.<span class="pl-en">addEntropy</span>(<span class="pl-c1">D</span>,<span class="pl-c1">1024</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>crypto[&#39;randomBytes&#39;]<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">Uint32Array</span>){<span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(<span class="pl-c1">32</span>);<span class="pl-k">if</span>(<span class="pl-c1">window</span>.<span class="pl-c1">crypto</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span>.<span class="pl-c1">crypto</span>.<span class="pl-smi">getRandomValues</span>)<span class="pl-c1">window</span>.<span class="pl-c1">crypto</span>.<span class="pl-en">getRandomValues</span>(<span class="pl-c1">F</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">window</span>.<span class="pl-smi">msCrypto</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span>.<span class="pl-smi">msCrypto</span>.<span class="pl-smi">getRandomValues</span>)<span class="pl-c1">window</span>.<span class="pl-smi">msCrypto</span>.<span class="pl-en">getRandomValues</span>(<span class="pl-c1">F</span>);</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span> <span class="pl-k">break</span> a;<span class="pl-smi">sjcl</span>.<span class="pl-smi">random</span>.<span class="pl-en">addEntropy</span>(<span class="pl-c1">F</span>,<span class="pl-c1">1024</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>crypto[&#39;getRandomValues&#39;]<span class="pl-pds">&quot;</span></span>)}}<span class="pl-k">catch</span>(a){<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span>.<span class="pl-smi">console</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>There was an error collecting entropy from the browser:<span class="pl-pds">&quot;</span></span>),<span class="pl-en">console</span>.<span class="pl-c1">log</span>(a))}</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span><span class="pl-k">=</span>{defaults<span class="pl-k">:</span>{v<span class="pl-k">:</span><span class="pl-c1">1</span>,iter<span class="pl-k">:</span><span class="pl-c1">1E4</span>,ks<span class="pl-k">:</span><span class="pl-c1">128</span>,ts<span class="pl-k">:</span><span class="pl-c1">64</span>,mode<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ccm<span class="pl-pds">&quot;</span></span>,adata<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,cipher<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>aes<span class="pl-pds">&quot;</span></span>},<span class="pl-en">ja</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};d<span class="pl-k">=</span>d<span class="pl-k">||</span>{};<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">g</span>({iv<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">random</span>.<span class="pl-en">randomWords</span>(<span class="pl-c1">4</span>,<span class="pl-c1">0</span>)},<span class="pl-smi">e</span>.<span class="pl-smi">defaults</span>),g;<span class="pl-smi">e</span>.<span class="pl-en">g</span>(f,c);c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">adata</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">f</span>.<span class="pl-smi">salt</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">salt</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(<span class="pl-smi">f</span>.<span class="pl-smi">salt</span>));<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">f</span>.<span class="pl-smi">iv</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">iv</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(<span class="pl-smi">f</span>.<span class="pl-smi">iv</span>));<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>[<span class="pl-smi">f</span>.<span class="pl-smi">mode</span>]<span class="pl-k">||!</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">cipher</span>[<span class="pl-smi">f</span>.<span class="pl-smi">cipher</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">100</span><span class="pl-k">&gt;=</span><span class="pl-smi">f</span>.<span class="pl-smi">iter</span><span class="pl-k">||</span><span class="pl-c1">64</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">ts</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">96</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">ts</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">128</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">ts</span><span class="pl-k">||</span><span class="pl-c1">128</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">ks</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">192</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">ks</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0x100</span><span class="pl-k">!==</span><span class="pl-smi">f</span>.<span class="pl-smi">ks</span><span class="pl-k">||</span><span class="pl-c1">2</span><span class="pl-k">&gt;</span><span class="pl-smi">f</span>.<span class="pl-smi">iv</span>.<span class="pl-c1">length</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">iv</span>.<span class="pl-c1">length</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>json encrypt: invalid parameters<span class="pl-pds">&quot;</span></span>);<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-en">cachedPbkdf2</span>(a,f),a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">key</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">f</span>.<span class="pl-smi">ks</span><span class="pl-k">/</span><span class="pl-c1">32</span>),<span class="pl-smi">f</span>.<span class="pl-smi">salt</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">salt</span>)<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">ecc</span><span class="pl-k">&amp;&amp;</span>a <span class="pl-k">instanceof</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">ecc</span>.<span class="pl-smi">elGamal</span>.<span class="pl-smi">publicKey</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">kem</span>(),<span class="pl-smi">f</span>.<span class="pl-smi">kemtag</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">tag</span>,a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">key</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">f</span>.<span class="pl-smi">ks</span><span class="pl-k">/</span><span class="pl-c1">32</span>));<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">toBits</span>(b));<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> c<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-smi">adata</span><span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">toBits</span>(c));g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sjcl.cipher</span>[<span class="pl-smi">f</span>.<span class="pl-smi">cipher</span>](a);<span class="pl-smi">e</span>.<span class="pl-en">g</span>(d,f);<span class="pl-smi">d</span>.<span class="pl-smi">key</span><span class="pl-k">=</span>a;<span class="pl-smi">f</span>.<span class="pl-smi">ct</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ccm<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">f</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">arrayBuffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">arrayBuffer</span>.<span class="pl-smi">ccm</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">b <span class="pl-k">instanceof</span> <span class="pl-c1">ArrayBuffer</span><span class="pl-k">?</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">arrayBuffer</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">encrypt</span>(g,b,<span class="pl-smi">f</span>.<span class="pl-smi">iv</span>,c,<span class="pl-smi">f</span>.<span class="pl-smi">ts</span>)<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>[<span class="pl-smi">f</span>.<span class="pl-smi">mode</span>].<span class="pl-en">encrypt</span>(g,b,<span class="pl-smi">f</span>.<span class="pl-smi">iv</span>,c,<span class="pl-smi">f</span>.<span class="pl-smi">ts</span>);<span class="pl-k">return</span> f},<span class="pl-en">encrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span>,f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">ja</span>.<span class="pl-c1">apply</span>(e,<span class="pl-c1">arguments</span>);<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-en">encode</span>(f)},<span class="pl-en">ia</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span>{};d<span class="pl-k">=</span>d<span class="pl-k">||</span>{};<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span>;b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">g</span>(<span class="pl-smi">e</span>.<span class="pl-en">g</span>(<span class="pl-smi">e</span>.<span class="pl-en">g</span>({},<span class="pl-smi">e</span>.<span class="pl-smi">defaults</span>),b),c,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> f,g;f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">adata</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">salt</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">salt</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(<span class="pl-smi">b</span>.<span class="pl-smi">salt</span>));<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">b</span>.<span class="pl-smi">iv</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">iv</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(<span class="pl-smi">b</span>.<span class="pl-smi">iv</span>));<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>[<span class="pl-smi">b</span>.<span class="pl-smi">mode</span>]<span class="pl-k">||!</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">cipher</span>[<span class="pl-smi">b</span>.<span class="pl-smi">cipher</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">100</span><span class="pl-k">&gt;=</span><span class="pl-smi">b</span>.<span class="pl-smi">iter</span><span class="pl-k">||</span><span class="pl-c1">64</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">ts</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">96</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">ts</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">128</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">ts</span><span class="pl-k">||</span><span class="pl-c1">128</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">ks</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">192</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">ks</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0x100</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">ks</span><span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-smi">iv</span><span class="pl-k">||</span><span class="pl-c1">2</span><span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-smi">iv</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-c1">4</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">iv</span>.<span class="pl-c1">length</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>json decrypt: invalid parameters<span class="pl-pds">&quot;</span></span>);<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-en">cachedPbkdf2</span>(a,b),a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">key</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">ks</span><span class="pl-k">/</span><span class="pl-c1">32</span>),<span class="pl-smi">b</span>.<span class="pl-smi">salt</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">salt</span>)<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">ecc</span><span class="pl-k">&amp;&amp;</span>a <span class="pl-k">instanceof</span> <span class="pl-smi">sjcl</span>.<span class="pl-smi">ecc</span>.<span class="pl-smi">elGamal</span>.<span class="pl-smi">secretKey</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">unkem</span>(<span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(<span class="pl-smi">b</span>.<span class="pl-smi">kemtag</span>)).<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">ks</span><span class="pl-k">/</span><span class="pl-c1">32</span>));<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">toBits</span>(f));g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">sjcl.cipher</span>[<span class="pl-smi">b</span>.<span class="pl-smi">cipher</span>](a);f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ccm<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">arrayBuffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">arrayBuffer</span>.<span class="pl-smi">ccm</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">ct</span> <span class="pl-k">instanceof</span> <span class="pl-c1">ArrayBuffer</span><span class="pl-k">?</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">arrayBuffer</span>.<span class="pl-smi">ccm</span>.<span class="pl-en">decrypt</span>(g,<span class="pl-smi">b</span>.<span class="pl-smi">ct</span>,<span class="pl-smi">b</span>.<span class="pl-smi">iv</span>,<span class="pl-smi">b</span>.<span class="pl-smi">tag</span>,f,<span class="pl-smi">b</span>.<span class="pl-smi">ts</span>)<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">mode</span>[<span class="pl-smi">b</span>.<span class="pl-smi">mode</span>].<span class="pl-en">decrypt</span>(g,<span class="pl-smi">b</span>.<span class="pl-smi">ct</span>,<span class="pl-smi">b</span>.<span class="pl-smi">iv</span>,f,<span class="pl-smi">b</span>.<span class="pl-smi">ts</span>);<span class="pl-smi">e</span>.<span class="pl-en">g</span>(d,b);<span class="pl-smi">d</span>.<span class="pl-smi">key</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">raw</span><span class="pl-k">?</span>f<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">utf8String</span>.<span class="pl-en">fromBits</span>(f)},<span class="pl-en">decrypt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span>;<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-en">ia</span>(a,<span class="pl-smi">e</span>.<span class="pl-en">decode</span>(b),c,d)},<span class="pl-en">encode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">hasOwnProperty</span>(b)){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">a-z0-9</span>]</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>json encode: invalid property name<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">+=</span>d<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;:<span class="pl-pds">&#39;</span></span>;d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>;<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> a[b]){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">+=</span>a[b];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-c1">escape</span>(a[b])<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">fromBits</span>(a[b],<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.bug</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>json encode: unsupported type<span class="pl-pds">&quot;</span></span>);}}<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>},<span class="pl-en">decode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\{</span><span class="pl-c1">.</span><span class="pl-k">*</span><span class="pl-cce">\}</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>json decode: this isn&#39;t json!<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\{</span><span class="pl-k">|</span><span class="pl-cce">\}</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span>,<span class="pl-pds">/</span></span>);<span class="pl-k">var</span> b<span class="pl-k">=</span>{},c,d;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(d<span class="pl-k">=</span>a[c].<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(?:(<span class="pl-c1">[&quot;&#39;]</span><span class="pl-k">?</span>)(<span class="pl-c1">[<span class="pl-c1">a-z</span>][<span class="pl-c1">a-z0-9</span>]</span><span class="pl-k">*</span>)<span class="pl-k">\1</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>:<span class="pl-c1">\s</span><span class="pl-k">*</span>(?:(-<span class="pl-k">?</span><span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">|</span>&quot;(<span class="pl-c1">[<span class="pl-c1">a-z0-9</span>+<span class="pl-cce">\/</span>%*_<span class="pl-c1">.</span>@=<span class="pl-cce">\-</span>]</span><span class="pl-k">*</span>)&quot;<span class="pl-k">|</span>(true<span class="pl-k">|</span>false))<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>)))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>json decode: this isn&#39;t json!<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span><span class="pl-k">!=</span>d[<span class="pl-c1">3</span>]<span class="pl-k">?</span>b[d[<span class="pl-c1">2</span>]]<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(d[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>)<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span>d[<span class="pl-c1">4</span>]<span class="pl-k">?</span>b[d[<span class="pl-c1">2</span>]]<span class="pl-k">=</span>d[<span class="pl-c1">2</span>].<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(ct<span class="pl-k">|</span>adata<span class="pl-k">|</span>salt<span class="pl-k">|</span>iv)<span class="pl-k">$</span><span class="pl-pds">/</span></span>)<span class="pl-k">?</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">codec</span>.<span class="pl-smi">base64</span>.<span class="pl-en">toBits</span>(d[<span class="pl-c1">4</span>])<span class="pl-k">:</span><span class="pl-c1">unescape</span>(d[<span class="pl-c1">4</span>])<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span>d[<span class="pl-c1">5</span>]<span class="pl-k">&amp;&amp;</span>(b[d[<span class="pl-c1">2</span>]]<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>d[<span class="pl-c1">5</span>])}<span class="pl-k">return</span> b},<span class="pl-en">g</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>{});<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b)<span class="pl-k">return</span> a;<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> b)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(d)){<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a[d]<span class="pl-k">&amp;&amp;</span>a[d]<span class="pl-k">!==</span>b[d])<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">sjcl.exception.invalid</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>required parameter overridden<span class="pl-pds">&quot;</span></span>);a[d]<span class="pl-k">=</span>b[d]}<span class="pl-k">return</span> a},<span class="pl-en">sa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{},d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)<span class="pl-smi">a</span>.<span class="pl-en">hasOwnProperty</span>(d)<span class="pl-k">&amp;&amp;</span>a[d]<span class="pl-k">!==</span>b[d]<span class="pl-k">&amp;&amp;</span>(c[d]<span class="pl-k">=</span>a[d]);<span class="pl-k">return</span> c},<span class="pl-en">ra</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{},d;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a[b[d]]<span class="pl-k">&amp;&amp;</span>(c[b[d]]<span class="pl-k">=</span>a[b[d]]);<span class="pl-k">return</span> c}};<span class="pl-smi">sjcl</span>.<span class="pl-smi">encrypt</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span>.<span class="pl-smi">encrypt</span>;<span class="pl-smi">sjcl</span>.<span class="pl-smi">decrypt</span><span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">json</span>.<span class="pl-smi">decrypt</span>;<span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">pa</span><span class="pl-k">=</span>{};<span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-en">cachedPbkdf2</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-smi">pa</span>,d;b<span class="pl-k">=</span>b<span class="pl-k">||</span>{};d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">iter</span><span class="pl-k">||</span><span class="pl-c1">1E3</span>;c<span class="pl-k">=</span>c[a]<span class="pl-k">=</span>c[a]<span class="pl-k">||</span>{};d<span class="pl-k">=</span>c[d]<span class="pl-k">=</span>c[d]<span class="pl-k">||</span>{firstSalt<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">salt</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">salt</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">salt</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">random</span>.<span class="pl-en">randomWords</span>(<span class="pl-c1">2</span>,<span class="pl-c1">0</span>)};c<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">salt</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-smi">firstSalt</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">salt</span>;d[c]<span class="pl-k">=</span>d[c]<span class="pl-k">||</span><span class="pl-smi">sjcl</span>.<span class="pl-smi">misc</span>.<span class="pl-en">pbkdf2</span>(a,c,<span class="pl-smi">b</span>.<span class="pl-smi">iter</span>);<span class="pl-k">return</span>{key<span class="pl-k">:</span>d[c].<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>),salt<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>)}};</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>sjcl);<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> define<span class="pl-k">&amp;&amp;</span><span class="pl-en">define</span>([],<span class="pl-k">function</span>(){<span class="pl-k">return</span> sjcl});</td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>


    </div>
  </div>

    </div>

        <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2017 <span title="0.12235s from github-fe147-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id="ajax-error-message" class="ajax-error-message flash flash-error">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
      </button>
      You can't perform that action at this time.
    </div>


      
      <script crossorigin="anonymous" integrity="sha256-0j4y5IIRK6Xj6pvY3H5VVoARanTgAnRqyR9BpOWHWps=" src="https://assets-cdn.github.com/assets/frameworks-d23e32e482112ba5e3ea9bd8dc7e555680116a74e002746ac91f41a4e5875a9b.js"></script>
      <script async="async" crossorigin="anonymous" integrity="sha256-h/2E6sW/Ldyuzs25de6nplLfQ24krsp2zrBVuoKrpo8=" src="https://assets-cdn.github.com/assets/github-87fd84eac5bf2ddcaececdb975eea7a652df436e24aeca76ceb055ba82aba68f.js"></script>
      
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
    <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>

  </body>
</html>

